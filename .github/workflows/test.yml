name: test

on:
  push:
    paths-ignore:
      - '**/*.md'
    branches:
      - main
  pull_request:
    paths-ignore:
      - '**/*.md'

env:
  CARGO_TERM_COLOR: always

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v1
    - name: Install dependencies
      run: |
        sudo apt install \
          libavutil-dev \
          libavformat-dev \
          libswresample-dev \
          libavcodec-dev
    - name: Test needle
      run: cd needle && cargo test -v
    - name: Test needle-capi
      run: cd needle-capi && cargo build -v && cargo test -v
    - name: Build needle-capi examples
      run: cd needle-capi/examples && make all
  macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v1
    - name: Install dependencies
      run: brew install ffmpeg
    - name: Test needle
      run: cd needle && cargo test -v
    - name: Test needle-capi
      run: cd needle-capi && cargo build -v && cargo test -v
    - name: Build needle-capi examples
      run: cd needle-capi/examples && make all
  windows:
    runs-on: windows-latest
    env:
      VCPKG_ROOT: ${{ github.workspace }}/vcpkg
      VCPKG_DEFAULT_BINARY_CACHE: ${{ github.workspace }}/vcpkg-bincache
    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v1
    - name: "Create directory '${{ env.VCPKG_DEFAULT_BINARY_CACHE }}'"
      run: mkdir -p $VCPKG_DEFAULT_BINARY_CACHE
      shell: bash
    - name: Install cargo-vcpkg
      run: cargo install cargo-vcpkg
    - name: Restore vcpkg and its artifacts.
      uses: actions/cache@v2
      env:
        cache-name: cache-vcpkg
      with:
        path: |
          ${{ env.VCPKG_ROOT }}
          !${{ env.VCPKG_ROOT }}/buildtrees
          !${{ env.VCPKG_ROOT }}/packages
          !${{ env.VCPKG_ROOT }}/downloads
          !${{ env.VCPKG_ROOT }}/installed
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles( 'needle/Cargo.lock' ) }}
    - name: Install dependencies
      run: cd needle && cargo vcpkg --verbose build
      shell: bash
    - name: Test needle
      run: cd needle && cargo test -v --features static
